# frozen_string_literal: true

RSpec.shared_examples '90 degrees left rotation' do

  def create(matrix)
    described_class.new(matrix)
  end

  it 'correctly rotates a 2 by 2 matrix' do
    matrix  = [[1, 2],
               [3, 4]]

    rotated = [[2, 4],
               [1, 3]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a different 2 by 2 matrix' do
    matrix  = [['A', 'B'],
               ['C', 'D']]

    rotated = [['B', 'D'],
               ['A', 'C']]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 3 by 3 matrix' do
    matrix  = [[1, 2, 3],
               [4, 5, 6],
               [7, 8, 9]]

    rotated = [[3, 6, 9],
               [2, 5, 8],
               [1, 4, 7]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates another 3 by 3 matrix' do
    matrix  = [['A', 'B', 'C'],
               ['D', 'E', 'F'],
               ['G', 'H', 'I']]

    rotated = [['C', 'F', 'I'],
               ['B', 'E', 'H'],
               ['A', 'D', 'G']]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 4 by 4 matrix' do
    matrix  = [[ 1,  2,  3,  4],
               [ 5,  6,  7,  8],
               [ 9, 10, 11, 12],
               [13, 14, 15, 16]]

    rotated = [[4, 8, 12, 16],
               [3, 7, 11, 15],
               [2, 6, 10, 14],
               [1, 5,  9, 13]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 5 by 5 matrix' do
    matrix  = [['A', 'B', 'C', 'D', 'E'],
               ['F', 'G', 'H', 'I', 'J'],
               ['K', 'L', 'M', 'N', 'O'],
               ['P', 'Q', 'R', 'S', 'T'],
               ['U', 'V', 'X', 'Y', 'Z']]

    rotated = [['E', 'J', 'O', 'T', 'Z'],
               ['D', 'I', 'N', 'S', 'Y'],
               ['C', 'H', 'M', 'R', 'X'],
               ['B', 'G', 'L', 'Q', 'V'],
               ['A', 'F', 'K', 'P', 'U']]

    expect(create(matrix).rotate_left).to eq rotated
  end


  it 'correctly rotates a 6 by 6 matrix' do
    matrix  = [[ 0,  1,  2,  3,  4,  5],
               [ 6,  7,  8,  9, 10, 11],
               [12, 13, 14, 15, 16, 17],
               [18, 19, 20, 21, 22, 23],
               [24, 25, 26, 27, 28, 29],
               [30, 31, 32, 33, 34, 35]]

    rotated = [[5, 11, 17, 23, 29, 35],
               [4, 10, 16, 22, 28, 34],
               [3,  9, 15, 21, 27, 33],
               [2,  8, 14, 20, 26, 32],
               [1,  7, 13, 19, 25, 31],
               [0,  6, 12, 18, 24, 30]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 7 by 7 matrix' do
    matrix  = [[ 0,  1,  2,  3,  4,  5,  6], 
               [ 7,  8,  9, 10, 11, 12, 13],
               [14, 15, 16, 17, 18, 19, 20],
               [21, 22, 23, 24, 25, 26, 27],
               [28, 29, 30, 31, 32, 33, 34],
               [35, 36, 37, 38, 39, 40, 41],
               [42, 43, 44, 45, 46, 47, 48]]


    rotated = [[6, 13, 20, 27, 34, 41, 48],
               [5, 12, 19, 26, 33, 40, 47],
               [4, 11, 18, 25, 32, 39, 46],
               [3, 10, 17, 24, 31, 38, 45],
               [2,  9, 16, 23, 30, 37, 44],
               [1,  8, 15, 22, 29, 36, 43],
               [0,  7, 14, 21, 28, 35, 42]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 8 by 8 matrix' do
    matrix  = [[ 0,  1,  2,  3,  4,  5,  6,  7],
               [ 8,  9, 10, 11, 12, 13, 14, 15],
               [16, 17, 18, 19, 20, 21, 22, 23],
               [24, 25, 26, 27, 28, 29, 30, 31],
               [32, 33, 34, 35, 36, 37, 38, 39],
               [40, 41, 42, 43, 44, 45, 46, 47],
               [48, 49, 50, 51, 52, 53, 54, 55],
               [56, 57, 58, 59, 60, 61, 62, 63]]

    rotated = [[7, 15, 23, 31, 39, 47, 55, 63],
               [6, 14, 22, 30, 38, 46, 54, 62],
               [5, 13, 21, 29, 37, 45, 53, 61],
               [4, 12, 20, 28, 36, 44, 52, 60],
               [3, 11, 19, 27, 35, 43, 51, 59],
               [2, 10, 18, 26, 34, 42, 50, 58],
               [1,  9, 17, 25, 33, 41, 49, 57],
               [0,  8, 16, 24, 32, 40, 48, 56]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 9 by 9 matrix' do
    matrix  = [[ 0,  1,  2,  3,  4,  5,  6,  7,  8],
               [ 9, 10, 11, 12, 13, 14, 15, 16, 17],
               [18, 19, 20, 21, 22, 23, 24, 25, 26],
               [27, 28, 29, 30, 31, 32, 33, 34, 35],
               [36, 37, 38, 39, 40, 41, 42, 43, 44],
               [45, 46, 47, 48, 49, 50, 51, 52, 53],
               [54, 55, 56, 57, 58, 59, 60, 61, 62],
               [63, 64, 65, 66, 67, 68, 69, 70, 71],
               [72, 73, 74, 75, 76, 77, 78, 79, 80]]

    rotated = [[8, 17, 26, 35, 44, 53, 62, 71, 80],
               [7, 16, 25, 34, 43, 52, 61, 70, 79],
               [6, 15, 24, 33, 42, 51, 60, 69, 78],
               [5, 14, 23, 32, 41, 50, 59, 68, 77],
               [4, 13, 22, 31, 40, 49, 58, 67, 76],
               [3, 12, 21, 30, 39, 48, 57, 66, 75],
               [2, 11, 20, 29, 38, 47, 56, 65, 74],
               [1, 10, 19, 28, 37, 46, 55, 64, 73],
               [0,  9, 18, 27, 36, 45, 54, 63, 72]]

    expect(create(matrix).rotate_left).to eq rotated
  end

  it 'correctly rotates a 10 by 10 matrix' do
    matrix  = [[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
               [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
               [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],
               [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],
               [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],
               [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],
               [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],
               [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],
               [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],
               [90, 91, 92, 93, 94, 95, 96, 97, 98, 99]]

    rotated = [[9, 19, 29, 39, 49, 59, 69, 79, 89, 99],
               [8, 18, 28, 38, 48, 58, 68, 78, 88, 98],
               [7, 17, 27, 37, 47, 57, 67, 77, 87, 97],
               [6, 16, 26, 36, 46, 56, 66, 76, 86, 96],
               [5, 15, 25, 35, 45, 55, 65, 75, 85, 95],
               [4, 14, 24, 34, 44, 54, 64, 74, 84, 94],
               [3, 13, 23, 33, 43, 53, 63, 73, 83, 93],
               [2, 12, 22, 32, 42, 52, 62, 72, 82, 92],
               [1, 11, 21, 31, 41, 51, 61, 71, 81, 91],
               [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]]

    expect(create(matrix).rotate_left).to eq rotated
  end
end
